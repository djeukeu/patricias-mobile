name: iOS Beta App Deployment
run-name: ${{ github.actor }} triggered the iOS Beta Deployment

on:
  push:
    branches:
      - develop

env:
  APP_ENV: ${{ vars.APP_ENV }}
  IOS_TEST_GROUPS: ${{ vars.IOS_TEST_GROUPS }}
  IOS_PACKAGE_NAME: ${{ secrets.IOS_PACKAGE_NAME }}
  MATCH_GIT_TOKEN: ${{ secrets.MATCH_GIT_TOKEN }}
  MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
  APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
  APPLE_KEY_ISSUER_ID: ${{ secrets.APPLE_KEY_ISSUER_ID }}
  FIREBASE_IOS_ID: ${{ secrets.FIREBASE_IOS_ID }}

jobs:
  ios:
    environment: 'STAGING'
    name: Build iOS
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Version Code
        id: version_code
        run: |
          echo "::set-output name=number::$(git rev-list --count HEAD)"
      - uses: xt0rted/setup-dotnet@v1.0.0
      - name: Install Gitversion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.12.0'
      - name: Use Gitversion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          configFilePath: GitVersion.yml
          useConfigFile: true
      - name: Read node version
        id: nvmrc
        uses: browniebroke/read-nvmrc-action@v1
      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvmrc.outputs.node_version }}'
      - name: Install project dependencies
        run: |
          yarn
          cd ios && pod install
      - name: Write google services file
        run: |
          cd ios/patricias
          echo '${{ secrets.IOS_GOOGLE_SERVICES }}' > GoogleService-Info.plist
      - name: Write app store key file
        run: |
          cd ios
          echo '${{ secrets.APP_STORE_API_KEY }}' > AuthKey_5FGVBZ7VQK.p8
      - name: setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Fastlane
        run: gem install fastlane -N
      - name: Bundle install
        run: |
          cd ios
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Fastlane Build
        run: |
          yarn ios:beta
        env:
          VERSION_CODE: ${{ steps.version_code.outputs.number }}
          MAJOR_VERSION: ${{ steps.gitversion.outputs.major }}
          MINOR_VERSION: ${{ steps.gitversion.outputs.minor }}
          PATCH_VERSION: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}
      - name: Cache bundle packages
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
